#!/bin/bash

YAST=/dev/shm/yast
REPO=$YAST/REPO
DUMPFILE=~/yast-svn-2012-02-14.dump
RULEDIR=~/svn-migration/yrules
svndumpfilter3=$RULEDIR/svndumpfilter3
ymoduleconf=$RULEDIR/ymodule.conf

[ -d $REPO ] || mkdir -p $REPO
if [ ! -d $REPO/db ]
then
   ## create the untangle repo
   svnadmin create $REPO
   svnadmin load $REPO < $DUMPFILE
fi

for MODULE in $MODULES #printer core vm qt installation #registration # x11 core mouse network printer ldap irda vm qt
do
  export MODULE
  SKIP=false
  if test -n "$BATCH"
    then rm -rf $YAST/$MODULE.dump $YAST/$MODULE.load $YAST/$MODULE
  fi

  if [ -f $YAST/$MODULE.dump ] || [ -e $YAST/$MODULE ]
  then
    read -p "Dump exists. Overwrite? (Y/n) " RES
    case "$RES" in
      n|N) echo "skipping..." ; SKIP=true
           ;;
      *) rm -rf $YAST/$MODULE.dump $YAST/$MODULE.load $YAST/$MODULE
           ;;
    esac
  fi
  if ! $SKIP
  then
    $svndumpfilter3 --untangle=$REPO `$ymoduleconf $MODULE`  "trunk/$MODULE" "branches/.*/$MODULE" "tags/.*/$MODULE" < $DUMPFILE > $YAST/$MODULE.dump 2>$MODULE.dumpfilter.out
    svnadmin create $YAST/$MODULE
    svnadmin load $YAST/$MODULE < $YAST/$MODULE.dump > $YAST/$MODULE.load 2>&1
    tail $YAST/$MODULE.load
   # svn ls file:///$YAST/$MODULE/trunk | grep -q . || { echo "no trunk, aborting" ; exit 1 ; }
  fi

  sed "s/include module.rule/declare MODULE=${MODULE}/" $RULEDIR/yast.rules > $MODULE.rules # avoid race-condition by having per-module file
  svn-all-fast-export --add-metadata --identity-map $RULEDIR/yast.map --rules $MODULE.rules $YAST/$MODULE > $MODULE.fastexport.out
  rm -rf $YAST/$MODULE $MODULE.rules # cleanup to save space
  mv $YAST/$MODULE.{dump,load} .
  mv yast-$MODULE{,.git}
  git clone yast-$MODULE.git
  ( cd yast-$MODULE ; git log -1 | cat )

done

